{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uch\\\\React\\\\udemy course\\\\ts-project\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextRef = useRef(null);\n\n  const submitForm = event => {\n    event.preventDefault();\n    const enteredText = todoTextRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      throw Error;\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"k5i9kRJXulbx+J272MHN3NZYeu0=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/ts-project/src/components/NewTodo.tsx"],"names":["React","useRef","NewTodo","props","todoTextRef","submitForm","event","preventDefault","enteredText","current","value","trim","length","Error","onAddTodo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,OAAwD,GAAIC,KAAD,IAAW;AAAA;;AAC1E,QAAMC,WAAW,GAAGH,MAAM,CAAmB,IAAnB,CAA1B;;AAEA,QAAMI,UAAU,GAAIC,KAAD,IAA4B;AAC7CA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGJ,WAAW,CAACK,OAAZ,CAAqBC,KAAzC;;AAEA,QAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,YAAMC,KAAN;AACA;AACD;;AACDV,IAAAA,KAAK,CAACW,SAAN,CAAgBN,WAAhB;AACD,GAVD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEH,UAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,GAAG,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAMF,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\r\n  const todoTextRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitForm = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const enteredText = todoTextRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      throw Error;\r\n      return;\r\n    }\r\n    props.onAddTodo(enteredText);\r\n  };\r\n  return (\r\n    <form onSubmit={submitForm}>\r\n      <label htmlFor=\"text\">Todo text</label>\r\n      <input type=\"text\" id=\"text\" ref={todoTextRef} />\r\n      <button>Add todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"]},"metadata":{},"sourceType":"module"}